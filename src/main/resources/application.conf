com.banno.jx-configs {

  http {
    port = 8080
    port = ${?PORT1}
    host = "0.0.0.0"
  }

  health {
    port = 8081
    port = ${?PORT0}
    host = "0.0.0.0"
  }

  postgres {
    jdbc-url = "jdbc:postgresql://localhost:5432/jx_configs?ApplicationName=jx-configs"
    jdbc-url = ${?POSTGRES_JDBC_URL}

    username = "jabberwocky"
    username = ${?POSTGRES_JXC_USERNAME}
    password = "password"
    password = ${?POSTGRES_JXC_PASSWORD}
    driver = "org.postgresql.Driver"
    hikari {
      pool-name = "jx-configs"
      maximum-pool-size = 10
      maximum-pool-size = ${?POSTGRES_JX_CONFIGS_MAX_POOL_SIZE}
      minimum-idle = 1
      minimum-idle = ${?POSTGRES_JX_CONFIGS_MINIMUM_IDLE}
      idle-timeout = 10 seconds
      idle-timeout = ${?POSTGRES_JX_CONFIGS_IDLE_TIMEOUT}
    }
  }

  upstreams {
    jx-service-configuration {
      base-url = "https://jxservice-configuration.banno.svc.cluster.local"
      base-url = ${?JXSERVICE_CONFIGURATION_URL}
    }

    jx-service-configuration-symx {
      base-url = "https://jxservice-configuration-symx.banno.svc.cluster.local"
      base-url = ${?JXSERVICE_CONFIGURATION_SYMX_URL}
    }

    institution-aggregation {
      base-url = "https://banno-institution-aggregation.banno.svc.cluster.local"
      base-url = ${?INSTITUTION_AGGREGATION_URL}
    }

    node-api-gateway {
      base-url = "https://node-api-gateway.banno.svc.cluster.local"
      base-url = ${?NODE_API_GATEWAY_URL}
    }
  }

  http-4s-client {
    max-total-connections = 100
    max-total-connections = ${?HTTP4S_CLIENT_MAX_TOTAL_CONNECTIONS}
    max-wait-queue-limit = 1000
    max-wait-queue-limit = ${?HTTP4S_CLIENT_MAX_WAIT_QUEUE_LIMIT}
    max-connections-per-request-key = 100
    max-connections-per-request-key = ${?HTTP4S_CLIENT_MAX_CONNECTIONS_PER_REQUEST_KEY}
    request-timeout = "20 seconds"
    request-timeout = ${?HTTP4S_CLIENT_REQUEST_TIMEOUT}
    response-header-timeout = "20 seconds"
    response-header-timeout = ${?HTTP4S_CLIENT_RESPONSE_HEADER_TIMEOUT}
  }

  redis {
    pool {
      max-total = 100
      max-total = ${?REDIS_POOL_MAX_TOTAL}
      min-idle = 5
      min-idle = ${?REDIS_POOL_MIN_IDLE}
      max-idle = 10
      max-idle = ${?REDIS_POOL_MAX_IDLE}
      block-when-exhausted = true
      blocked-max-wait = "100 milliseconds"
    }
    host = "jx-configs-redis.staging.banno-internal.com"
    host = ${?REDIS_HOST}
    port = 6379
    port = ${?REDIS_PORT}
    timeout = 3000
    response-cache-expiration = "10 seconds"
  }

  redis-custom {
    expires-in = "1 day"
    expires-in = ${?REDIS_CACHE_EXPIRATION}
  }

  vault {
    address = ""
    address = ${?VAULT_ADDR}

    role-id = "jx-configs"

    # A postgres creds path is postgres/creds/${postgres-hostname}-${app-name} so that
    # multiple postgres' may be used by an app. Most new services will only need access
    # to one, however, examples:
    # postgres1-creds-path = "postgres/creds/postgres1-template-service"
    # postgres-aviato-creds-path = "postgres/creds/postgres-aviato-template-service"
    postgres-creds-path = "postgres/creds/postgres-jabberwocky-jx-configs"

    # The role under dynamic credentials has the access priveleges for a limited time, the lease.
    # to keep using those credentials, the app must extend that lease with a certain frequency.
    # The lease-duration says for how long does the initial lease or subsequent extensions last.
    # the lease-renew-period says how long after each lease renewal before renewing again.
    lease-duration = 25 hours
    lease-renew-wait = 24 hours
    retry {
      max-wait = "2 seconds"
      max-retry = 5
    }
    jxchange-credentials-encryption-private-key-path = "/secret/data-services/jxchange-credentials-encryption-private"
  }

  defaults {
    consumer-name = "JHA"
    consumer-product = "BannoMobile"
    test-env = false
  }

  service-configuration {
    pass-through-enabled = false
    pass-through-enabled = ${?PASS_THROUGH_ENABLED}

    fallback-persist = false
    fallback-persist = ${?FALLBACK_PERSIST}

    cache-expiration = 24 hours
    cache-expiration = ${?CACHE_EXPIRATION}

    tracing-enabled = true
    tracing-enabled = ${?TRACING_ENABLED}
  }

}
